// These Codes are generated by kakaTools ProtocolGenerater v1.3
// ------------------------------------------------------------------
//
// Copyright (c) 2015 linchen.
// All rights reserved.
//
// Email: superkaka.org@gmail.com
//
// ------------------------------------------------------------------

package protocol.vo
{
	import flash.utils.ByteArray;
	import protocol.*;
	import org.superkaka.KLib.net.protocol.*;

    //登录
    public class sendLoginVO extends BaseVO
    {
        
        //
        public var actorId:int;
        //
        public var m_byte:int;
        //
        public var m_date:Date;
        //
        public var m_float:Number;
        //
        public var testStruct:sendLogin_testStructVO;
        //玩家列表
        public var playerList:Vector.<sendLogin_playerListVO>;
        
        
        public function sendLoginVO():void
        {
			super(Protocol.sendLogin);
        }
        
        override public function decode(binReader:ProtocolByteArray):void
        {
		
            actorId = binReader.readShort();
            
            m_byte = binReader.readByte();
            
            m_date = binReader.readDate();
            
            m_float = Number(binReader.readFloat());
            
            testStruct = new sendLogin_testStructVO();
            testStruct.decode(binReader);
            
            var len_playerList:int = binReader.readUnsignedShort();
            playerList = new Vector.<sendLogin_playerListVO>();
            for (var i:int = 0; i < len_playerList; i++)
            {

            playerList[i] = new sendLogin_playerListVO();
            playerList[i].decode(binReader);
            
            }
            
        }
        
        override public function encode(binWriter:ProtocolByteArray):void
        {
		
            binWriter.writeShort(actorId);
            
            binWriter.writeByte(m_byte);
            
            binWriter.writeDate(m_date);
            
            binWriter.writeFloat(m_float);
            
            testStruct.encode(binWriter);
            
			var len_playerList:int = playerList.length;
			binWriter.writeShort(len_playerList);
            for (var i:int = 0; i < len_playerList; i++)
            {

            playerList[i].encode(binWriter);
            
            }
            
        }
        
    }

}

